image_config: &image_config

  # make sure to set your Docker Hub username & password in CircleCI,
  # either as project-specific environment variables
  # or as resources in your organization's org-global Context

  IMAGE_NAME: swagger-csharp

  IMAGE_TAG: 1.0.2

  # NOTE: if you're modifying this config.yml file manually
  # rather than using the included setup script,
  # make sure you also add the values of your IMAGE_NAME & IMAGE_TAG variables
  # to the `test_image` job (line 55)

  LINUX_VERSION: DEBIAN_STRETCH

  # RUBY_VERSION_NUM: # pick a version from https://cache.ruby-lang.org/pub/ruby

  # NODE_VERSION_NUM: # pick a version from https://nodejs.org/dist

  # PYTHON_VERSION_NUM: # pick a version from https://python.org/ftp/python

  JAVA: true

  MYSQL_CLIENT: false

  POSTGRES_CLIENT: false

  DOCKERIZE: false

  BROWSERS: false

version: 2
jobs:
  build:
    machine: true
    environment:
      <<: *image_config

    steps:
      - checkout

      - run:
          name: generate dockerfile
          command: |
            bash scripts/generate.sh > Dockerfile
            echo "RUN apt install -y apt-transport-https dirmngr gnupg ca-certificates" >> Dockerfile
            echo "RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF" >> Dockerfile
            echo "RUN echo 'deb https://download.mono-project.com/repo/debian stable-stretch main' | tee /etc/apt/sources.list.d/mono-official-stable.list" >> Dockerfile
            echo "RUN apt update" >> Dockerfile
            echo "RUN apt-get install -y mono-complete jq" >> Dockerfile

      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - run: docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG .

      - run: docker push $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG && sleep 10

      - store_artifacts:
          path: Dockerfile

  test_image:
    docker:
      - image: $DOCKER_USERNAME/swagger-csharp:1.0.2
        environment:
          <<: *image_config

    steps:
      - checkout

      #- run:
      #    name: start Xvfb for phantomjs test
      #    # command: Xvfb :99
      #    # background: true

      - run:
          name: bats tests
          command: |
            mkdir -p test_results/bats
            bats scripts/tests.bats | \
            perl scripts/tap-to-junit.sh > \
            test_results/bats/results.xml

      - store_test_results:
          path: test_results

      - store_artifacts:
          path: test_results

workflows:
  version: 2
  dockerfile_wizard:
    jobs:
      - build:
          context: org-global

      - test_image:
          context: org-global
          requires:
            - build
